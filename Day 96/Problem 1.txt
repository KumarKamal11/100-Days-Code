Day 96: Problem-1

Given a 0-indexed integer array nums, determine whether there exist 
two subarrays of length 2 with equal sum. Note that the two subarrays
must begin at different indices. Return true if these subarrays exist,
and false otherwise. A subarray is a contiguous non-empty sequence of 
elements within an array.

Approach:

The simple and brute force approach is find all possible subarray 
of length 2 and check whether the sum of two subarray is equal or 
not. The only problem with this approach is it takes O(N^2) time.

Another Approach is using set. We check whether sum of two consecutive
element is present in set or not if it is present in set then simply
return true otherwise we store the sum in set. At the end if we could
not find then return false. 

Code:

 bool findSubarrays(vector<int>& nums) {
        set<int> st;
        for(int i = 1;i < nums.size();i++)
        {
            int sum = nums[i] + nums[i-1];
            if(st.find(sum)!= st.end())
                return true;
            st.insert(sum);
        }
        return false;
    }
};
