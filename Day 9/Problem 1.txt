Day 8: Problem-1

Problem: Make the array beautiful

Given an array of negative and non-negative integers. You have to make the array beautiful.
An array is beautiful if two adjacent integers, arr[i] and arr[i+1] are either negative or non-negative.
And you can do the following operation any number of times until the array becomes beautiful.

Problem Link:https://www.geeksforgeeks.org/problems/make-the-array-beautiful--170647/1
Difficulty Level:Easy
Topics: Stack

Approach:
1.Initialize an empty stack to store elements.
2.Iterate through each element in the input array.
3.If the stack is empty, push the current element onto the stack.
4.If the current element is non-negative and the top element of the stack is also non-negative, push the current element onto the stack.
5.If the current element is negative and the top element of the stack is also negative, push the current element onto the stack.
6.If the current element has a different sign than the top element of the stack, pop the top element of the stack.
7.Repeat steps 3 to 6 until all elements in the input array are processed.
8.Create a result vector of size equal to the size of the stack.
9.Iterate through the stack and store its elements in reverse order in the result vector.
10.Return the result vector containing the beautiful array.

Code:
  
vector<int> makeBeautiful(vector<int> arr) {
        // code here
        stack<int>st;
        for(int i=0;i<arr.size();i++){
            if(st.empty()){
                st.push(arr[i]);
            }
            else if(arr[i]>=0){
                if(st.top()>=0){
                    st.push(arr[i]);
                 }
                else{
                st.pop();
               }
             }
            else{
                if(st.top()<0){
                    st.push(arr[i]);
                }
                else{
                st.pop();
                }
            } 
         }
            int n=st.size();
            vector<int>ans(n);
            int i=n-1;
            while(!st.empty()){
                ans[i]=st.top();
                i--;
                st.pop();
            }
         return ans;
       }
