Day 8: Problem-2

Problem: 921. Minimum Add to Make Parentheses Valid
Problem Link:https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/description/?source=submission-ac
Difficulty Level:Medium
Topics: Stack

Approach:

For each character in the string:
1.If it's an opening bracket,it is pushed onto the stack.
2.If it's a closing bracket,it checks if the stack is empty.
3.If the stack is empty, it means there is no corresponding opening bracket for this closing bracket, so a move is required. Otherwise, it pops an opening bracket from the stack, indicating a valid pair.
4.At the end, the number of remaining bracket in the stack represents the number of opening bracket without corresponding closing bracket. The number of moves required to balance them is the sum of this count and the count of closing bracket without corresponding opening brackets encountered earlier.
5.We return sum as the minimum number of moves required.

Code:
  int minAddToMakeValid(string s) {
        stack<char>st;
        int cnt=0;
        for(int i=0;i<s.size();i++){
            if(s[i]=='('){
                st.push(s[i]);
            }
            else{
                if(st.empty()){
                    cnt++;
                }else{
                st.pop();
               }
            }
        }
        return st.size()+cnt;
    }