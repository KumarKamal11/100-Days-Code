Day 46: Problem-1

Problem: 1046. Last Stone Weight

You are given an array of integers stones where stones[i] is the weight of the ith stone.
We are playing a game with the stones. On each turn, we choose the heaviest two stones and
smash them together. Suppose the heaviest two stones have weights x and y with x <= y. 
The result of this smash is:
If x == y, both stones are destroyed, and
If x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.
At the end of the game, there is at most one stone left.
Return the weight of the last remaining stone. If there are no stones left, return 0.

Problem Link: https://leetcode.com/problems/last-stone-weight/description/
Topics: Heap

Approach:

We Will use priority queue and store evey stones in it. Then we will take two stones each time 
and collide them and store the value which is left, until we are left with one or no stone. 
If no stone will be there 0 will be returned else will return the stone which is left.

Code:
 int lastStoneWeight(vector<int>& stones) {
      priority_queue<int>p;
      for(int i=0;i<stones.size();i++){
        p.push(stones[i]);
      }  
      while(p.size()>1){
        int weight=p.top();
        p.pop();
        weight-=p.top();
        p.pop();
        if(weight!=0){
            p.push(weight);
        }
      }
      if(p.empty()){
        return 0;
      }
      return p.top();
    }
