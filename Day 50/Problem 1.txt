Day 50: Problem-1

Problem:  2643. Row With Maximum Ones

Given a m x n binary matrix mat, find the 0-indexed position of the row that contains 
the maximum count of ones, and the number of ones in that row.In case there are multiple
rows that have the maximum count of ones, the row with the smallest row number should be 
selected.Return an array containing the index of the row, and the number of ones in it.

Problem Link: https://leetcode.com/problems/row-with-maximum-ones/description/
Topics: Matrix

Approach

Iterate through each row and and using cnt variable count the number of ones in each row.
Update the vector ans, if the count of ones in the current row is greater than count of ones 
in previous rows and return the vector v.

Code:
   vector<int> rowAndMaximumOnes(vector<vector<int>>& mat) {
        vector<int>ans(2);
        int col=mat[0].size();
        int row=mat.size();
        int maxcount=INT_MIN;
        for(int i=0;i<row;i++){
            int cnt=0;
            for(int j=0;j<col;j++){
                if(mat[i][j]==1){
                    cnt++;
                }
             }
                if(cnt>maxcount){
                maxcount=cnt;
                ans[0]=i;
                ans[1]=cnt;
            }
        }
        return ans;
    }
