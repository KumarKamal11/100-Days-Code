Day 41: Problem-1

Problem: 872. Leaf-Similar Trees
Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.
Two binary trees are considered leaf-similar if their leaf value sequence is the same.
Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.

Problem Link: https://leetcode.com/problems/leaf-similar-trees/description/
Topics: Binary Tree

Approach:
The Approach is very Simple. We have to Initialize two empty strings, s1 and s2, to store leaf value sequences.After that we
Perform inorder traversal on both trees, appending leaf values to their respective strings.Compare the leaf value sequences 
stored in s1 and s2.If the sequences are identical, return true; otherwise, return false.

Code:
void inorder(TreeNode* root,string &s){
        if(root==NULL){
            return;
        }
        if(root->left==NULL && root->right==NULL){
            s+=to_string(root->val)+"_";
        }
        inorder(root->left,s);
        inorder(root->right,s);
    }

    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        string s1="";
        string s2="";

        inorder(root1,s1);
        inorder(root2,s2);

        if(s1==s2){
            return true;
        }
        return false;
    }
