Day 10: Problem-1

Problem:

Tom is a string freak. He has got sequences of  n words to manipulate.
If in a sequence, two same words come together then hell destroy each other. 
He wants to know the number of words left in the sequence after this pairwise destruction.

Problem Link:https://www.geeksforgeeks.org/problems/string-manipulation3706/1?page=1&difficulty%5B%5D=0&category%5B%5D=Stack&sortBy=submissions
Difficulty Level:Easy
Topics: Stack

Approach:
1.Create a stack to store words.
2.Iterate through the sequence of words.
3.If the stack is empty, push the current word onto the stack.
4.If the current word is different from the top word of the stack, push it onto the stack.
5.If the current word is the same as the top word of the stack, pop the top word.
6.After processing all words, return the size of the stack.

Code:
  int removeConsecutiveSame(vector <string > v) 
    {
        // Your code goes here
        stack<string>st;
        for(int i=0;i<v.size();i++){
            if(st.empty()){
                st.push(v[i]);
            }
            else if(st.top()==v[i]){
                st.pop();
            }
            else{
                st.push(v[i]);
            }
        }
        return st.size();
    } 
