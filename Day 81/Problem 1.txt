Day 81: Problem-1

Given a string s, find the length of the longest substring without repeating characters.
Example 1:
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.


Example 2:
Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Approach:

In this problem we need to take unique characters count. So for this we can 
maintain set and if any character is already present in set then we will 
delete all the characters from set till that occurance.

Code:
   int lengthOfLongestSubstring(string s) {
        unordered_set<char>set;
        int i=0,j=0,ans=0;
        int n=s.length();
        while(i<n && j<n){
            if(set.find(s[j])==set.end()){
                set.insert(s[j++]);
                ans=max(ans,j-i);
            }
            else{
                set.erase(s[i++]);
            }
        }
        return ans;
    }
