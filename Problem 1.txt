Day 92: Problem-1

Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
A subsequence of a string is a new string that is formed from the original string by 
deleting some (can be none) of the characters without disturbing the relative positions 
of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Approach:

The Approach is very simple, the idea is to traverse the longer string t and 
whenever a character matches the current character of string s, the index for
s is moved to the right.

Breakdown:

Traverse string t and s using pointer i and j. If the current character of t matches
the current character of s, increment i and j.otherwise move right to t (i.e j++)
Continue until the end of string t or until all characters of s are found in t.
At the end of traversal, if i is equal to the length of s, then s is a subsequence of t.

Code:
bool isSubsequence(string s, string t) {
       
       int len1= s.length();
       int len2= t.length();

       int i=0;
       int j=0;

       while(i< len1 and j < len2){
        if(s[i]==t[j]){
            i++;
            j++;
        }
        else{
            j++;
         }
       }
      
      if(i==len1){
        return true;
      }
      return false;
    }
